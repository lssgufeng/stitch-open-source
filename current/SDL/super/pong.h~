#ifndef _PONG_H_
#define _PONG_H_
#include <SDL/SDL.h>
#include <lua.hpp>
#include <iostream>
using namespace std;
class pong{
	private:
		bool running;
	SDL_Surface* display;
	public:
		lua_State *L;
		char buf[256];
		pong();
		int OnExecute();
		bool init();
		void event(SDL_Event* Event);
		void loop();
		void render();
		void cleanup();
		void interpret_lua(lua_State *L);
};


void pong::interpret_lua(lua_State *L){
int error;
cout<<"Lua>> ";
while(fgets(pong::buf,sizeof(pong::buf),stdin) != NULL){
error = luaL_loadbuffer(L,pong::buf,strlen(pong::buf),"line") || lua_pcall(L,0,0,0);
cout<<"Lua>> ";
if(error){
fprintf(stderr,"%s\n",lua_tostring(L,-1));
lua_pop(L,1);
}//if(error) end
}//while() end
}
#endif
